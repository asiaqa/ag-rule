# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: TEMP

on:
  workflow_dispatch: 
  watch:
    types: [started]
  schedule: 
    - cron: 21 23,11 * * *
    - cron: 01 3,18 * * *

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go 1.x.y
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        check-latest: true
        
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '12.x'
    - run: npm install
      
    - name: Install hostlist-complier
      run: npm i -g @adguard/hostlist-compiler
        
    - name: Set folder condition, variables and timezone
      run: |
          sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          rm -f ./out*.txt
          
    - name: Run main.go
      run: |
          go run main.go "./setting/min_rules.txt" out_min.txt "./setting/custom.txt"
          
    - name: Create output_min.txt
      run: |
          line=$(wc -l < out_min.txt)
          echo "# Title: MP Min Adguard Home Rules List" > output_min.txt
          echo "# Verison: $(date +%Y%m%d%H%M)" >> output_min.txt
          echo "# Expires: around 1 day" >> output_min.txt
          echo "# Below are the links of the adblock rules" >> output_min.txt
          echo "# Total number of rules = $line" >> output_min.txt
          while IFS= read -r line; do echo "# $line" >> output_min.txt; done < "./setting/min_rules.txt"
          echo "####################################################################################" >> output_min.txt
          cat out_min.txt  >> output_min.txt
          echo "####################################################################################" >> output_min.txt
          
 
